<form version="1.1" theme="dark">
  <label>Suricata Alert Overview (V3.0)</label>
  <description>V3 Additions: Dashboard Now Runs Off Datamodels</description>
  <fieldset submitButton="true" autoRun="true">
    <input type="time" token="time" searchWhenChanged="false">
      <label>Time Selector</label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="text" token="signature">
      <label>Signature Search</label>
      <default>ET INFO Microsoft Connection Test</default>
    </input>
    <input type="text" token="ip">
      <label>IP Search</label>
      <initialValue>10.13.26.2</initialValue>
    </input>
    <input type="radio" token="who">
      <label>IP Search By</label>
      <choice value="src_ip">Source</choice>
      <choice value="dest_ip">Destination</choice>
      <initialValue>src_ip</initialValue>
    </input>
  </fieldset>
  <row>
    <panel>
      <single>
        <title>Total Alerts (Excluding Known Scanners)</title>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity, alerts.signature, alerts.category, alerts.src_ip, alerts.src_port, alerts.dest_ip, alerts.dest_port, alerts.proto
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.category AS category, alerts.src_ip AS src_ip, alerts.src_port AS src_port, alerts.dest_ip AS dest_ip, alerts.dest_port AS dest_port, alerts.proto AS proto
| stats count</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <refresh>5m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Severity Totals</title>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity, alerts.signature, alerts.category, alerts.src_ip, alerts.src_port, alerts.dest_ip, alerts.dest_port, alerts.proto
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.category AS category, alerts.src_ip AS src_ip, alerts.src_port AS src_port, alerts.dest_ip AS dest_ip, alerts.dest_port AS dest_port, alerts.proto AS proto

```Filter Out Specific Alerts Here```
```| where !like (signature, "ET SCAN%") OR like (signature, "GPL ICMP%")```

| stats count by severity
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <refresh>5m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#D94E17,"Low":#CBA700}</colorPalette>
        </format>
        <format type="color" field="Count">
          <colorPalette type="list">[#118832,#FFFFFF]</colorPalette>
          <scale type="threshold">0</scale>
        </format>
      </table>
    </panel>
    <panel>
      <table>
        <title>Unique Signature Totals</title>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity, alerts.signature
| rename alerts.severity AS severity, alerts.signature AS signature

```Filter Out Specific Alerts Here```
```| where !like (signature, "ET SCAN%") OR like (signature, "GPL ICMP%")```

| stats count by severity, signature
| eval severity = upper(substr(severity,1,1)).lower(substr(severity,2))
| stats count by severity
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <refresh>5m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#D94E17,"Low":#CBA700}</colorPalette>
        </format>
        <format type="color" field="Count">
          <colorPalette type="list">[#118832,#FFFFFF]</colorPalette>
          <scale type="threshold">0</scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Unique Alert Signatures</title>
      <table>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity, alerts.signature, alerts.category, alerts.src_ip, alerts.src_port, alerts.dest_ip, alerts.dest_port, alerts.proto
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.category AS category, alerts.src_ip AS src_ip, alerts.src_port AS src_port, alerts.dest_ip AS dest_ip, alerts.dest_port AS dest_port, alerts.proto AS proto

```Filter Out Specific Alerts Here```
```| where !like (signature, "ET SCAN%") OR like (signature, "GPL ICMP%")```

| stats count by severity, signature, category
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count, signature AS Signature, category AS Category</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <refresh>10m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#E3723A,"Low":#CBA700}</colorPalette>
        </format>
        <format type="color" field="count">
          <colorPalette type="list">[#CBA700,#E3723A,#D41F1F]</colorPalette>
          <scale type="threshold">10,100</scale>
        </format>
        <format type="color" field="Count">
          <colorPalette type="minMidMax" maxColor="#D41F1F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Unknown External To Internal Traffic</title>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity,alerts.src_ip, alerts.dest_ip
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.src_ip AS src_ip, alerts.dest_ip AS dest_ip

```Filter Out Other Known Sources Here```
```| where !like (src_ip, "1.1.1.1") AND !like (src_ip, "1.1.1.%")```

| eval ExternalSouce = case(
cidrmatch("10.0.0.0/8",src_ip),"False",
cidrmatch("172.16.0.0/12",src_ip),"False",
cidrmatch("192.168.0.0/16",src_ip),"False",
isnull(src_ip) OR like(src_ip,""), "False",
match(src_ip,"^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$"),"True")

| eval ExternalDest = case(
cidrmatch("10.0.0.0/8",dest_ip),"False",
cidrmatch("172.16.0.0/12",dest_ip),"False",
cidrmatch("192.168.0.0/16",dest_ip),"False",
isnull(src_ip) OR like(dest_ip,""), "False",
match(src_ip,"^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$"),"True")

| where like (ExternalSouce, "True") AND !like (ExternalDest, "True")

| fields severity, src_ip, dest_ip, count
| sort - count
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count, signature AS Signature, category AS Category, src_ip AS Source, dest_ip AS Destination, src_port AS "Source Port", dest_port AS "Destination Port", proto AS Protocol</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <refresh>5m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#D94E17,"Low":#CBA700}</colorPalette>
        </format>
      </table>
    </panel>
    <panel>
      <table>
        <title>Unknown Internal To External Traffic</title>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity,alerts.src_ip, alerts.dest_ip
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.src_ip AS src_ip, alerts.dest_ip AS dest_ip

```Filter Out Other Known Sources Here```
```| where !like (src_ip, "1.1.1.1") AND !like (src_ip, "1.1.1.%")```

| eval ExternalSouce = case(
cidrmatch("10.0.0.0/8",src_ip),"False",
cidrmatch("172.16.0.0/12",src_ip),"False",
cidrmatch("192.168.0.0/16",src_ip),"False",
isnull(src_ip) OR like(src_ip,""), "False",
match(src_ip,"^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$"),"True")

| eval ExternalDest = case(
cidrmatch("10.0.0.0/8",dest_ip),"False",
cidrmatch("172.16.0.0/12",dest_ip),"False",
cidrmatch("192.168.0.0/16",dest_ip),"False",
isnull(src_ip) OR like(dest_ip,""), "False",
match(src_ip,"^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$"),"True")

| where !like (ExternalSouce, "True") AND like (ExternalDest, "True")

| fields severity, src_ip, dest_ip, count
| sort - count
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count, signature AS Signature, category AS Category, src_ip AS Source, dest_ip AS Destination, src_port AS "Source Port", dest_port AS "Destination Port", proto AS Protocol</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <refresh>5m</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#D94E17,"Low":#CBA700}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Signature Search</title>
      <table>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity, alerts.signature, alerts.category, alerts.src_ip, alerts.src_port, alerts.dest_ip, alerts.dest_port, alerts.proto
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.category AS category, alerts.src_ip AS src_ip, alerts.src_port AS src_port, alerts.dest_ip AS dest_ip, alerts.dest_port AS dest_port, alerts.proto AS proto

```Filter Out Other Known Sources Here```
```| where !like (fieldname, "match%")```

| eval src_port=tonumber(src_port)
| eval dest_port=tonumber(dest_port)
| appendpipe [where src_port &gt; 1024 | eval src_port = "High Port"]
| appendpipe [where dest_port &gt; 1024 | eval dest_port = "High Port"]
| mvexpand src_port
| mvexpand dest_port
| where (src_port &lt; tonumber(1025) OR src_port = "High Port") AND (dest_port &lt; tonumber(1025) OR dest_port = "High Port")
| stats count by severity, signature, category, src_ip, src_port, dest_ip, dest_port, proto
| where signature = "$signature$"
| sort - count
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count, signature AS Signature, category AS Category, src_ip AS Source, dest_ip AS Destination, src_port AS "Source Port", dest_port AS "Destination Port", proto AS Protocol</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#D94E17,"Low":#CBA700}</colorPalette>
        </format>
        <format type="color" field="Count">
          <colorPalette type="minMidMax" maxColor="#D41F1F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>IP Search</title>
      <table>
        <search>
          <query>| tstats summariesonly=f count from datamodel=Suricata_Suite.alerts by alerts.severity, alerts.signature, alerts.category, alerts.src_ip, alerts.src_port, alerts.dest_ip, alerts.dest_port, alerts.proto
| rename alerts.severity AS severity, alerts.signature AS signature, alerts.category AS category, alerts.src_ip AS src_ip, alerts.src_port AS src_port, alerts.dest_ip AS dest_ip, alerts.dest_port AS dest_port, alerts.proto AS proto

```Filter Out Other Known Sources Here```
```| where !like (fieldname, "match%")```

| eval src_port=tonumber(src_port)
| eval dest_port=tonumber(dest_port)
| appendpipe [where src_port &gt; 1024 | eval src_port = "High Port"]
| appendpipe [where dest_port &gt; 1024 | eval dest_port = "High Port"]
| mvexpand src_port
| mvexpand dest_port
| where (src_port &lt; tonumber(1025) OR src_port = "High Port") AND (dest_port &lt; tonumber(1025) OR dest_port = "High Port")
| where $who$ = "$ip$"
| stats count by severity, signature, category, src_ip, src_port, dest_ip, dest_port, proto
| sort - count
| eval sorter=severity
| eval sorter=case(severity="High",1,severity="Medium",2,severity="Low",3)
| sort by sorter,-count
| fields - sorter
| appendpipe [| stats count | where count=0 | eval "severity"="No Instances Found"]
| rename severity AS Severity, count AS Count, signature AS Signature, category AS Category, src_ip AS Source, dest_ip AS Destination, src_port AS "Source Port", dest_port AS "Destination Port", proto AS Protocol</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <format type="color" field="Severity">
          <colorPalette type="map">{"High":#D41F1F,"Medium":#D94E17,"Low":#CBA700}</colorPalette>
        </format>
        <format type="color" field="Count">
          <colorPalette type="minMidMax" maxColor="#D41F1F" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
      </table>
    </panel>
  </row>
</form>
